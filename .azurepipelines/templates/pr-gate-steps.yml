## @file
# File templates/pr-gate-steps.yml
#
# template file containing the steps to build
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

parameters:
  tool_chain_tag: ''
  build_targets: ''
  build_archs: ''

steps:
- checkout: self
  clean: true
  submodules: true
  fetchDepth: 1
  persistCredentials: true
- script: |
      git config --global user.email "bob.c.feng@intel.com"
      git config --global user.name "Bob Feng"
  displayName: Set Git UserName

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8.x'
    architecture: 'x64'

- script: pip install -r pip-requirements.txt --upgrade
  displayName: 'Install/Upgrade pip modules'

# Build repo

- script: |
        stuart_setup -c TestPkg\PlatformBuild.py -t ${{ parameters.build_targets}} -a ${{ parameters.build_archs}} TOOL_CHAIN_TAG=${{ parameters.tool_chain_tag}}
  displayName: Setup ${{ parameters.build_archs}}
  workingDirectory: $(Build.SourcesDirectory)/edk2

- script: |
        stuart_update -c TestPkg\PlatformBuild.py -t ${{ parameters.build_targets}} -a ${{ parameters.build_archs}} TOOL_CHAIN_TAG=${{ parameters.tool_chain_tag}}
  displayName: Update ${{ parameters.build_archs}}
  workingDirectory: $(Build.SourcesDirectory)/edk2


# build basetools
#   do this after setup and update so that code base dependencies
#   are all resolved.
- template: basetools-build-steps.yml
  parameters:
    tool_chain_tag: ${{ parameters.tool_chain_tag }}

- task: CmdLine@1
  displayName: Build and Test ${{ parameters.build_archs}}
  inputs:
    filename: python
    arguments: -m pytest -s -q --html=report\test_report.html --self-contained-html TestFramework.py

# Copy the build logs to the artifact staging directory
- task: CopyFiles@2
  displayName: "Copy build logs"
  inputs:
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    SourceFolder: 'report'
    contents: |
      test_report.html
    flattenFolders: true
  condition: succeededOrFailed()

# Publish build artifacts to Azure Artifacts/TFS or a file share
- task: PublishBuildArtifacts@1
  continueOnError: true
  displayName: "Publish test report"
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'Test Report $(System.JobName)'
  condition: succeededOrFailed()