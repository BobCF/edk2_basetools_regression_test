From 7e98db16cb685b7e92a5c5e069eab868c09a3539 Mon Sep 17 00:00:00 2001
From: Yuwei Chen <yuwei.chen@intel.com>
Date: Mon, 27 Jul 2020 16:19:59 +0800
Subject: [Patch 03/12] Add fake library and drivers in TestPkg in order to
 create test case.

Signed-off-by: Yuwei Chen <yuwei.chen@intel.com>
---
 TestPkg/FakeEmuSec/Ia32/SwitchRam.S           |  89 ++++++++++
 TestPkg/FakeEmuSec/Ia32/SwitchRam.asm         |  88 ++++++++++
 TestPkg/FakeEmuSec/Ia32/TempRam.c             |  59 +++++++
 TestPkg/FakeEmuSec/Sec.c                      | 140 ++++++++++++++++
 TestPkg/FakeEmuSec/Sec.h                      |  45 ++++++
 TestPkg/FakeEmuSec/Sec.inf                    |  48 ++++++
 TestPkg/FakeEmuSec/X64/SwitchRam.S            |  66 ++++++++
 TestPkg/FakeEmuSec/X64/SwitchRam.asm          |  70 ++++++++
 TestPkg/FakeLogo/HaveATest.jpg                | Bin 0 -> 31331 bytes
 TestPkg/FakeLogo/JpegLogo.idf                 |  10 ++
 TestPkg/FakeLogo/JpegLogoDxe.inf              |  52 ++++++
 TestPkg/FakeLogo/Logo.c                       | 153 ++++++++++++++++++
 TestPkg/FakeLogo/Logo.jpg                     | Bin 0 -> 11944 bytes
 .../BaseFakeLibraryLib/BaseFakeLibraryLib.c   | 152 +++++++++++++++++
 .../BaseFakeLibraryLib/BaseFakeLibraryLib.inf |  50 ++++++
 .../BaseFakeLibraryLib/BaseFakeLibraryLib.uni |  20 +++
 TestPkg/Library/BaseFakeLibraryLib/Extra.uni  |  27 ++++
 .../BaseFakeLibraryLib/UniIncluded.uni        |  21 +++
 TestPkg/LibraryClass.dsc                      |   3 +-
 TestPkg/Sec/SecMain.inf                       |   1 +
 TestPkg/TestIa32X64.fdf                       |   2 +
 TestPkg/TestPkg32X64.dsc                      |   2 +
 22 files changed, 1097 insertions(+), 1 deletion(-)
 create mode 100644 TestPkg/FakeEmuSec/Ia32/SwitchRam.S
 create mode 100644 TestPkg/FakeEmuSec/Ia32/SwitchRam.asm
 create mode 100644 TestPkg/FakeEmuSec/Ia32/TempRam.c
 create mode 100644 TestPkg/FakeEmuSec/Sec.c
 create mode 100644 TestPkg/FakeEmuSec/Sec.h
 create mode 100644 TestPkg/FakeEmuSec/Sec.inf
 create mode 100644 TestPkg/FakeEmuSec/X64/SwitchRam.S
 create mode 100644 TestPkg/FakeEmuSec/X64/SwitchRam.asm
 create mode 100644 TestPkg/FakeLogo/HaveATest.jpg
 create mode 100644 TestPkg/FakeLogo/JpegLogo.idf
 create mode 100644 TestPkg/FakeLogo/JpegLogoDxe.inf
 create mode 100644 TestPkg/FakeLogo/Logo.c
 create mode 100644 TestPkg/FakeLogo/Logo.jpg
 create mode 100644 TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.c
 create mode 100644 TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.inf
 create mode 100644 TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.uni
 create mode 100644 TestPkg/Library/BaseFakeLibraryLib/Extra.uni
 create mode 100644 TestPkg/Library/BaseFakeLibraryLib/UniIncluded.uni

diff --git a/TestPkg/FakeEmuSec/Ia32/SwitchRam.S b/TestPkg/FakeEmuSec/Ia32/SwitchRam.S
new file mode 100644
index 0000000000..d8298223a9
--- /dev/null
+++ b/TestPkg/FakeEmuSec/Ia32/SwitchRam.S
@@ -0,0 +1,89 @@
+#------------------------------------------------------------------------------
+#
+# Copyright (c) 2007, Intel Corporation. All rights reserved.<BR>
+# SPDX-License-Identifier: BSD-2-Clause-Patent
+#
+# Module Name:
+#
+#   Stack.asm
+#
+# Abstract:
+#
+#   Switch the stack from temporary memory to permanent memory.
+#
+#------------------------------------------------------------------------------
+
+ .text
+
+
+//------------------------------------------------------------------------------
+// VOID
+// EFIAPI
+// SecSwitchStack (
+//   UINT32   TemporaryMemoryBase,
+//   UINT32   PermenentMemoryBase
+//   )//
+//------------------------------------------------------------------------------
+ASM_GLOBAL ASM_PFX(SecSwitchStack)
+ASM_PFX(SecSwitchStack):
+#
+# Save three register: eax, ebx, ecx
+#
+    push  %eax
+    push  %ebx
+    push  %ecx
+    push  %edx
+
+#
+# !!CAUTION!! this function address's is pushed into stack after
+# migration of whole temporary memory, so need save it to permanent
+# memory at first!
+#
+
+    movl  20(%esp), %ebx            # Save the first parameter
+    movl  24(%esp), %ecx            # Save the second parameter
+
+#
+# Save this function's return address into permanent memory at first.
+# Then, Fixup the esp point to permanent memory
+#
+
+    movl  %esp, %eax
+    subl  %ebx, %eax
+    addl  %ecx, %eax
+    movl  (%esp), %edx                 # copy pushed register's value to permanent memory
+    movl  %edx, (%eax)
+    movl  4(%esp), %edx
+    movl  %edx, 4(%eax)
+    movl  8(%esp), %edx
+    movl  %edx, 8(%eax)
+    movl  12(%esp), %edx
+    movl  %edx, 12(%eax)
+    movl  16(%esp), %edx
+    movl  %edx, 16(%eax)
+    movl  %eax, %esp                   # From now, esp is pointed to permanent memory
+
+#
+# Fixup the ebp point to permanent memory
+#
+#ifndef __APPLE__
+    movl   %ebp, %eax
+    subl   %ebx, %eax
+    addl   %ecx, %eax
+    movl   %eax, %ebp                  # From now, ebp is pointed to permanent memory
+
+#
+# Fixup callee's ebp point for PeiDispatch
+#
+    movl   (%ebp), %eax
+    subl   %ebx, %eax
+    addl   %ecx, %eax
+    movl   %eax, (%ebp)                # From now, Temporary's PPI caller's stack is in permanent memory
+#endif
+
+    pop   %edx
+    pop   %ecx
+    pop   %ebx
+    pop   %eax
+    ret
+
diff --git a/TestPkg/FakeEmuSec/Ia32/SwitchRam.asm b/TestPkg/FakeEmuSec/Ia32/SwitchRam.asm
new file mode 100644
index 0000000000..99ef002980
--- /dev/null
+++ b/TestPkg/FakeEmuSec/Ia32/SwitchRam.asm
@@ -0,0 +1,88 @@
+;------------------------------------------------------------------------------
+;
+; Copyright (c) 2007 - 2012, Intel Corporation. All rights reserved.<BR>
+; SPDX-License-Identifier: BSD-2-Clause-Patent
+;
+; Module Name:
+;
+;   Stack.asm
+;
+; Abstract:
+;
+;   Switch the stack from temporary memory to permanent memory.
+;
+;------------------------------------------------------------------------------
+
+    .586p
+    .model  flat,C
+    .code
+
+;------------------------------------------------------------------------------
+; VOID
+; EFIAPI
+; SecSwitchStack (
+;   UINT32   TemporaryMemoryBase,
+;   UINT32   PermenentMemoryBase
+;   );
+;------------------------------------------------------------------------------
+SecSwitchStack   PROC
+    ;
+    ; Save three register: eax, ebx, ecx
+    ;
+    push  eax
+    push  ebx
+    push  ecx
+    push  edx
+
+    ;
+    ; !!CAUTION!! this function address's is pushed into stack after
+    ; migration of whole temporary memory, so need save it to permanent
+    ; memory at first!
+    ;
+
+    mov   ebx, [esp + 20]          ; Save the first parameter
+    mov   ecx, [esp + 24]          ; Save the second parameter
+
+    ;
+    ; Save this function's return address into permanent memory at first.
+    ; Then, Fixup the esp point to permanent memory
+    ;
+    mov   eax, esp
+    sub   eax, ebx
+    add   eax, ecx
+    mov   edx, dword ptr [esp]         ; copy pushed register's value to permanent memory
+    mov   dword ptr [eax], edx
+    mov   edx, dword ptr [esp + 4]
+    mov   dword ptr [eax + 4], edx
+    mov   edx, dword ptr [esp + 8]
+    mov   dword ptr [eax + 8], edx
+    mov   edx, dword ptr [esp + 12]
+    mov   dword ptr [eax + 12], edx
+    mov   edx, dword ptr [esp + 16]    ; Update this function's return address into permanent memory
+    mov   dword ptr [eax + 16], edx
+    mov   esp, eax                     ; From now, esp is pointed to permanent memory
+
+    ;
+    ; Fixup the ebp point to permanent memory
+    ;
+    mov   eax, ebp
+    sub   eax, ebx
+    add   eax, ecx
+    mov   ebp, eax                ; From now, ebp is pointed to permanent memory
+
+    ;
+    ; Fixup callee's ebp point for PeiDispatch
+    ;
+    mov   eax, dword ptr [ebp]
+    sub   eax, ebx
+    add   eax, ecx
+    mov   dword ptr [ebp], eax    ; From now, Temporary's PPI caller's stack is in permanent memory
+
+    pop   edx
+    pop   ecx
+    pop   ebx
+    pop   eax
+    ret
+SecSwitchStack   ENDP
+
+    END
diff --git a/TestPkg/FakeEmuSec/Ia32/TempRam.c b/TestPkg/FakeEmuSec/Ia32/TempRam.c
new file mode 100644
index 0000000000..e8b0d53bb1
--- /dev/null
+++ b/TestPkg/FakeEmuSec/Ia32/TempRam.c
@@ -0,0 +1,59 @@
+/*++ @file
+  Temp RAM PPI
+
+Copyright (c) 2011, Apple Inc. All rights reserved.<BR>
+SPDX-License-Identifier: BSD-2-Clause-Patent
+
+**/
+
+#include <PiPei.h>
+#include <Library/DebugLib.h>
+#include <Library/BaseMemoryLib.h>
+
+#include <Ppi/TemporaryRamSupport.h>
+
+VOID
+EFIAPI
+SecSwitchStack (
+  UINT32   TemporaryMemoryBase,
+  UINT32   PermenentMemoryBase
+  );
+
+
+EFI_STATUS
+EFIAPI
+SecTemporaryRamSupport (
+  IN CONST EFI_PEI_SERVICES   **PeiServices,
+  IN EFI_PHYSICAL_ADDRESS     TemporaryMemoryBase,
+  IN EFI_PHYSICAL_ADDRESS     PermanentMemoryBase,
+  IN UINTN                    CopySize
+  )
+{
+  //
+  // Migrate the whole temporary memory to permanent memory.
+  //
+  CopyMem (
+    (VOID*)(UINTN)PermanentMemoryBase,
+    (VOID*)(UINTN)TemporaryMemoryBase,
+    CopySize
+    );
+
+  //
+  // SecSwitchStack function must be invoked after the memory migration
+  // immediately, also we need fixup the stack change caused by new call into
+  // permanent memory.
+  //
+  SecSwitchStack ((UINT32) TemporaryMemoryBase, (UINT32) PermanentMemoryBase);
+
+  //
+  // We need *not* fix the return address because currently,
+  // The PeiCore is executed in flash.
+  //
+
+  //
+  // Simulate to invalid temporary memory, terminate temporary memory
+  //
+  //ZeroMem ((VOID*)(UINTN)TemporaryMemoryBase, CopySize);
+
+  return EFI_SUCCESS;
+}
diff --git a/TestPkg/FakeEmuSec/Sec.c b/TestPkg/FakeEmuSec/Sec.c
new file mode 100644
index 0000000000..1c0f73d669
--- /dev/null
+++ b/TestPkg/FakeEmuSec/Sec.c
@@ -0,0 +1,140 @@
+/*++ @file
+  Stub SEC that is called from the OS application that is the root of the emulator.
+
+  The OS application will call the SEC with the PEI Entry Point API.
+
+Copyright (c) 2011, Apple Inc. All rights reserved.<BR>
+SPDX-License-Identifier: BSD-2-Clause-Patent
+
+**/
+
+#include "Sec.h"
+
+
+
+EFI_PEI_TEMPORARY_RAM_SUPPORT_PPI mSecTemporaryRamSupportPpi = {
+  SecTemporaryRamSupport
+};
+
+
+EFI_PEI_PPI_DESCRIPTOR  gPrivateDispatchTable[] = {
+  {
+    EFI_PEI_PPI_DESCRIPTOR_PPI | EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST,
+    &gEfiTemporaryRamSupportPpiGuid,
+    &mSecTemporaryRamSupportPpi
+  }
+};
+
+
+
+/**
+  The entry point of PE/COFF Image for the PEI Core, that has been hijacked by this
+  SEC that sits on top of an OS application. So the entry and exit of this module
+  has the same API.
+
+  This function is the entry point for the PEI Foundation, which allows the SEC phase
+  to pass information about the stack, temporary RAM and the Boot Firmware Volume.
+  In addition, it also allows the SEC phase to pass services and data forward for use
+  during the PEI phase in the form of one or more PPIs.
+  There is no limit to the number of additional PPIs that can be passed from SEC into
+  the PEI Foundation. As part of its initialization phase, the PEI Foundation will add
+  these SEC-hosted PPIs to its PPI database such that both the PEI Foundation and any
+  modules can leverage the associated service calls and/or code in these early PPIs.
+  This function is required to call ProcessModuleEntryPointList() with the Context
+  parameter set to NULL.  ProcessModuleEntryPoint() is never expected to return.
+  The PEI Core is responsible for calling ProcessLibraryConstructorList() as soon as
+  the PEI Services Table and the file handle for the PEI Core itself have been established.
+  If ProcessModuleEntryPointList() returns, then ASSERT() and halt the system.
+
+  @param SecCoreData  Points to a data structure containing information about the PEI
+                      core's operating environment, such as the size and location of
+                      temporary RAM, the stack location and the BFV location.
+
+  @param PpiList      Points to a list of one or more PPI descriptors to be installed
+                      initially by the PEI core. An empty PPI list consists of a single
+                      descriptor with the end-tag EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST.
+                      As part of its initialization phase, the PEI Foundation will add
+                      these SEC-hosted PPIs to its PPI database such that both the PEI
+                      Foundation and any modules can leverage the associated service calls
+                      and/or code in these early PPIs.
+
+**/
+VOID
+EFIAPI
+_ModuleEntryPoint (
+  IN EFI_SEC_PEI_HAND_OFF   *SecCoreData,
+  IN EFI_PEI_PPI_DESCRIPTOR *PpiList
+  )
+{
+  EFI_STATUS                Status;
+  EFI_PEI_FV_HANDLE         VolumeHandle;
+  EFI_PEI_FILE_HANDLE       FileHandle;
+  VOID                      *PeCoffImage;
+  EFI_PEI_CORE_ENTRY_POINT  EntryPoint;
+  EFI_PEI_PPI_DESCRIPTOR    *Ppi;
+  EFI_PEI_PPI_DESCRIPTOR    *SecPpiList;
+  UINTN                     SecReseveredMemorySize;
+  UINTN                     Index;
+  EFI_PEI_PPI_DESCRIPTOR    PpiArray[10];
+
+  EMU_MAGIC_PAGE()->PpiList = PpiList;
+  ProcessLibraryConstructorList ();
+
+  DEBUG ((EFI_D_ERROR, "SEC Has Started\n"));
+
+  //
+  // Add Our PPIs to the list
+  //
+  SecReseveredMemorySize = sizeof (gPrivateDispatchTable);
+  for (Ppi = PpiList, Index = 1; ; Ppi++, Index++) {
+    SecReseveredMemorySize += sizeof (EFI_PEI_PPI_DESCRIPTOR);
+
+    if ((Ppi->Flags & EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST) == EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST) {
+      // Since we are appending, need to clear out previous list terminator.
+      Ppi->Flags &= ~EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST;
+      break;
+    }
+  }
+
+  // Keep everything on a good alignment
+  SecReseveredMemorySize = ALIGN_VALUE (SecReseveredMemorySize, CPU_STACK_ALIGNMENT);
+
+#if 0
+  // Tell the PEI Core to not use our buffer in temp RAM
+  SecPpiList = (EFI_PEI_PPI_DESCRIPTOR *)SecCoreData->PeiTemporaryRamBase;
+  SecCoreData->PeiTemporaryRamBase = (VOID *)((UINTN)SecCoreData->PeiTemporaryRamBase + SecReseveredMemorySize);
+  SecCoreData->PeiTemporaryRamSize -= SecReseveredMemorySize;
+#else
+  //
+  // When I subtrack from SecCoreData->PeiTemporaryRamBase PEI Core crashes? Either there is a bug
+  // or I don't understand temp RAM correctly?
+  //
+
+  SecPpiList = &PpiArray[0];
+  ASSERT (sizeof (PpiArray) >= SecReseveredMemorySize);
+#endif
+  // Copy existing list, and append our entries.
+  CopyMem (SecPpiList, PpiList, sizeof (EFI_PEI_PPI_DESCRIPTOR) * Index);
+  CopyMem (&SecPpiList[Index], gPrivateDispatchTable, sizeof (gPrivateDispatchTable));
+
+  // Find PEI Core and transfer control
+  VolumeHandle = (EFI_PEI_FV_HANDLE)(UINTN)SecCoreData->BootFirmwareVolumeBase;
+  FileHandle   = NULL;
+  Status = PeiServicesFfsFindNextFile (EFI_FV_FILETYPE_PEI_CORE, VolumeHandle, &FileHandle);
+  ASSERT_EFI_ERROR (Status);
+
+  Status = PeiServicesFfsFindSectionData (EFI_SECTION_PE32, FileHandle, &PeCoffImage);
+  ASSERT_EFI_ERROR (Status);
+
+  Status = PeCoffLoaderGetEntryPoint (PeCoffImage, (VOID **)&EntryPoint);
+  ASSERT_EFI_ERROR (Status);
+
+  // Transfer control to PEI Core
+  EntryPoint (SecCoreData, SecPpiList);
+
+  // PEI Core never returns
+  ASSERT (FALSE);
+  return;
+}
+
+
diff --git a/TestPkg/FakeEmuSec/Sec.h b/TestPkg/FakeEmuSec/Sec.h
new file mode 100644
index 0000000000..42554e05b5
--- /dev/null
+++ b/TestPkg/FakeEmuSec/Sec.h
@@ -0,0 +1,45 @@
+/*++ @file
+  Stub SEC that is called from the OS application that is the root of the emulator.
+
+  The OS application will call the SEC with the PEI Entry Point API.
+
+Copyright (c) 2011, Apple Inc. All rights reserved.<BR>
+SPDX-License-Identifier: BSD-2-Clause-Patent
+
+**/
+
+#ifndef __SEC_H___
+#define __SEC_H___
+
+
+#include <PiPei.h>
+#include <Library/EmuMagicPageLib.h>
+#include <Library/DebugLib.h>
+#include <Library/PeiServicesLib.h>
+#include <Library/PeCoffGetEntryPointLib.h>
+#include <Library/BaseMemoryLib.h>
+
+#include <Ppi/TemporaryRamSupport.h>
+
+
+//
+// I think this should be defined in a MdePkg include file?
+//
+VOID
+EFIAPI
+ProcessLibraryConstructorList (
+  VOID
+  );
+
+EFI_STATUS
+EFIAPI
+SecTemporaryRamSupport (
+  IN CONST EFI_PEI_SERVICES   **PeiServices,
+  IN EFI_PHYSICAL_ADDRESS     TemporaryMemoryBase,
+  IN EFI_PHYSICAL_ADDRESS     PermanentMemoryBase,
+  IN UINTN                    CopySize
+  );
+
+
+#endif
+
diff --git a/TestPkg/FakeEmuSec/Sec.inf b/TestPkg/FakeEmuSec/Sec.inf
new file mode 100644
index 0000000000..2f9e3d4780
--- /dev/null
+++ b/TestPkg/FakeEmuSec/Sec.inf
@@ -0,0 +1,48 @@
+## @file
+# Entry Point of Emu Emulator
+#
+# Main executable file of Unix Emulator that loads PEI core after initialization finished.
+# Portions copyright (c) 2011, Apple Inc. All rights reserved.<BR>
+# Copyright (c) 2012, Intel Corporation. All rights reserved.<BR>
+#
+#  SPDX-License-Identifier: BSD-2-Clause-Patent
+#
+#
+##
+
+[Defines]
+  INF_VERSION                    = 0x00010005
+  BASE_NAME                      = EmuSec
+  FILE_GUID                      = BCAF98C9-22B0-3B4F-9CBD-C8A6B4DBCEE9
+  MODULE_TYPE                    = SEC
+  VERSION_STRING                 = 1.0
+
+
+[Sources]
+  Sec.c
+
+[Sources.X64]
+  X64/SwitchRam.asm
+  X64/SwitchRam.S
+
+[Sources.IA32]
+  Ia32/TempRam.c
+  Ia32/SwitchRam.asm
+  Ia32/SwitchRam.S
+
+[Packages]
+  MdePkg/MdePkg.dec
+  EmulatorPkg/EmulatorPkg.dec
+
+[LibraryClasses]
+  DebugLib
+  PeCoffGetEntryPointLib
+  PeiServicesLib
+  PpiListLib
+  BaseMemoryLib
+
+[Ppis]
+  gEfiTemporaryRamSupportPpiGuid
+
+[Pcd]
+  gEmulatorPkgTokenSpaceGuid.PcdPeiServicesTablePage
diff --git a/TestPkg/FakeEmuSec/X64/SwitchRam.S b/TestPkg/FakeEmuSec/X64/SwitchRam.S
new file mode 100644
index 0000000000..59d4e2edef
--- /dev/null
+++ b/TestPkg/FakeEmuSec/X64/SwitchRam.S
@@ -0,0 +1,66 @@
+#------------------------------------------------------------------------------
+#
+# Copyright (c) 2006 - 2011, Intel Corporation. All rights reserved.<BR>
+# Portions copyright (c) 2011, Apple Inc. All rights reserved.
+# SPDX-License-Identifier: BSD-2-Clause-Patent
+#
+#------------------------------------------------------------------------------
+
+
+
+//  EFI_STATUS
+//  EFIAPI
+//  SecTemporaryRamSupport (
+//    IN CONST EFI_PEI_SERVICES   **PeiServices,         // %rcx
+//    IN EFI_PHYSICAL_ADDRESS     TemporaryMemoryBase,   // %rdx
+//    IN EFI_PHYSICAL_ADDRESS     PermanentMemoryBase,   // %r8
+//    IN UINTN                    CopySize               // %r9
+//    )
+//
+ASM_GLOBAL ASM_PFX(SecTemporaryRamSupport)
+ASM_PFX(SecTemporaryRamSupport):
+  // Adjust callers %rbp to account for stack move
+  subq    %rdx, %rbp     // Calc offset of %rbp in Temp Memory
+  addq    %r8,  %rbp     // add in permanent base to offset
+
+  pushq   %rbp           // stack frame is for the debugger
+  movq    %rsp, %rbp
+
+  pushq   %rdx          // Save TemporaryMemoryBase
+  pushq   %r8           // Save PermanentMemoryBase
+  pushq   %r9           // Save CopySize
+
+  //
+  // Copy all of temp RAM to permanent memory, including stack
+  //
+  // CopyMem (PermanentMemoryBase, TemporaryMemoryBase, CopySize);
+  //          %rcx,                %rdx,                %r8
+  movq    %r8,  %rcx    // Shift arguments
+  movq    %r9,  %r8
+  subq    $0x28, %rsp   // Allocate register spill area & 16-byte align stack
+  call    ASM_PFX(CopyMem)
+  // Temp mem stack now copied to permanent location. %esp still in temp memory
+  addq    $0x28, %rsp
+
+  popq    %r9           // CopySize (old stack)
+  popq    %r8           // PermanentMemoryBase (old stack)
+  popq    %rdx          // TemporaryMemoryBase (old stack)
+
+  movq    %rsp, %rcx    // Move to new stack
+  subq    %rdx, %rcx    // Calc offset of stack in Temp Memory
+  addq    %r8,  %rcx    // Calc PermanentMemoryBase address
+  movq    %rcx, %rsp    // Update stack
+  // Stack now points to permanent memory
+
+  // ZeroMem (TemporaryMemoryBase /* rcx */, CopySize /* rdx */);
+  movq    %rdx, %rcx
+  movq    %r9,  %rdx
+  subq    $0x28, %rsp   // Allocate register spill area & 16-byte align stack
+  call    ASM_PFX(ZeroMem)
+  addq    $0x28, %rsp
+
+  // This data comes off the NEW stack
+  popq    %rbp
+  ret
+
+
diff --git a/TestPkg/FakeEmuSec/X64/SwitchRam.asm b/TestPkg/FakeEmuSec/X64/SwitchRam.asm
new file mode 100644
index 0000000000..e66bda5bf4
--- /dev/null
+++ b/TestPkg/FakeEmuSec/X64/SwitchRam.asm
@@ -0,0 +1,70 @@
+;------------------------------------------------------------------------------
+;
+; Copyright (c) 2006 - 2012, Intel Corporation. All rights reserved.<BR>
+; Portions copyright (c) 2011, Apple Inc. All rights reserved.
+; SPDX-License-Identifier: BSD-2-Clause-Patent
+;
+;------------------------------------------------------------------------------
+
+EXTERN CopyMem:PROC
+EXTERN ZeroMem:PROC
+
+    .code
+
+;------------------------------------------------------------------------------
+;  EFI_STATUS
+;  EFIAPI
+;  SecTemporaryRamSupport (
+;    IN CONST EFI_PEI_SERVICES   **PeiServices,         // %rcx
+;    IN EFI_PHYSICAL_ADDRESS     TemporaryMemoryBase,   // %rdx
+;    IN EFI_PHYSICAL_ADDRESS     PermanentMemoryBase,   // %r8
+;    IN UINTN                    CopySize               // %r9
+;    )
+;------------------------------------------------------------------------------
+SecTemporaryRamSupport PROC
+  ; Adjust callers %rbp to account for stack move
+  sub     rbp, rdx      ; Calc offset of %rbp in Temp Memory
+  add     rbp, r8       ; add in permanent base to offset
+
+  push    rbp           ; stack frame is for the debugger
+  mov     rbp, rsp
+
+  push    rdx           ; Save TemporaryMemoryBase
+  push    r8            ; Save PermanentMemoryBase
+  push    r9            ; Save CopySize
+
+  ;
+  ; Copy all of temp RAM to permanent memory, including stack
+  ;
+  ; CopyMem (PermanentMemoryBase, TemporaryMemoryBase, CopySize);
+  ;          %rcx,                %rdx,                %r8
+  mov     rcx, r8       ; Shift arguments
+  mov     r8, r9
+  sub     rsp, 028h     ; Allocate register spill area & 16-byte align stack
+  call    CopyMem
+  ; Temp mem stack now copied to permanent location. %esp still in temp memory
+  add     rsp, 028h
+
+  pop     r9            ; CopySize (old stack)
+  pop     r8            ; PermanentMemoryBase (old stack)
+  pop     rdx           ; TemporaryMemoryBase (old stack)
+
+  mov     rcx, rsp      ; Move to new stack
+  sub     rcx, rdx      ; Calc offset of stack in Temp Memory
+  add     rcx, r8       ; Calc PermanentMemoryBase address
+  mov     rsp, rcx      ; Update stack
+  ; Stack now points to permanent memory
+
+  ; ZeroMem (TemporaryMemoryBase /* rcx */, CopySize /* rdx */);
+  mov     rcx, rdx
+  mov     rdx, r9
+  sub     rsp, 028h     ; Allocate register spill area & 16-byte align stack
+  call    ZeroMem
+  add     rsp, 028h
+
+  ; This data comes off the NEW stack
+  pop     rbp
+  ret
+SecTemporaryRamSupport ENDP
+
+  END
diff --git a/TestPkg/FakeLogo/HaveATest.jpg b/TestPkg/FakeLogo/HaveATest.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..b0ee419721ad19e926cddf1347667ac57ae70b37
GIT binary patch
literal 31331
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%0AL(38W
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
P;pqJS^A>Eyzl;ALC)o^j

literal 0
HcmV?d00001

diff --git a/TestPkg/FakeLogo/JpegLogo.idf b/TestPkg/FakeLogo/JpegLogo.idf
new file mode 100644
index 0000000000..a39500e043
--- /dev/null
+++ b/TestPkg/FakeLogo/JpegLogo.idf
@@ -0,0 +1,10 @@
+// /** @file
+// Platform Logo image definition file.
+//
+// Copyright (c) 2020, Intel Corporation. All rights reserved.<BR>
+//
+// SPDX-License-Identifier: BSD-2-Clause-Patent
+//
+// **/
+
+#image IMG_LOGO Logo.jpg
diff --git a/TestPkg/FakeLogo/JpegLogoDxe.inf b/TestPkg/FakeLogo/JpegLogoDxe.inf
new file mode 100644
index 0000000000..47f1672a4c
--- /dev/null
+++ b/TestPkg/FakeLogo/JpegLogoDxe.inf
@@ -0,0 +1,52 @@
+## @file
+#  The default logo JPEG picture shown on setup screen.
+#
+#  Copyright (c) 2020, Intel Corporation. All rights reserved.<BR>
+#
+#  SPDX-License-Identifier: BSD-2-Clause-Patent
+#
+#
+##
+
+[Defines]
+  INF_VERSION                    = 0x00010005
+  BASE_NAME                      = JpegLogoDxe
+  FILE_GUID                      = 319CFE1D-8F15-4A7A-BF40-EECA953D87EF
+  MODULE_TYPE                    = DXE_DRIVER
+  VERSION_STRING                 = 1.0
+
+  ENTRY_POINT                    = InitializeLogo
+#
+#  This flag specifies whether HII resource section is generated into PE image.
+#
+  UEFI_HII_RESOURCE_SECTION      = TRUE
+
+#
+# The following information is for reference only and not required by the build tools.
+#
+#  VALID_ARCHITECTURES           = IA32 X64
+#
+
+[Sources]
+  Logo.jpg
+  Logo.c
+  JpegLogo.idf
+
+[Packages]
+  MdePkg/MdePkg.dec
+  MdeModulePkg/MdeModulePkg.dec
+
+[LibraryClasses]
+  UefiBootServicesTableLib
+  UefiDriverEntryPoint
+  DebugLib
+
+[Protocols]
+  gEfiHiiDatabaseProtocolGuid        ## CONSUMES
+  gEfiHiiImageExProtocolGuid         ## CONSUMES
+  gEfiHiiPackageListProtocolGuid     ## PRODUCES CONSUMES
+  gEdkiiPlatformLogoProtocolGuid     ## PRODUCES
+
+[Depex]
+  gEfiHiiDatabaseProtocolGuid AND
+  gEfiHiiImageExProtocolGuid
diff --git a/TestPkg/FakeLogo/Logo.c b/TestPkg/FakeLogo/Logo.c
new file mode 100644
index 0000000000..a636b086ca
--- /dev/null
+++ b/TestPkg/FakeLogo/Logo.c
@@ -0,0 +1,153 @@
+/** @file
+  Logo DXE Driver, install Edkii Platform Logo protocol.
+
+Copyright (c) 2016 - 2020, Intel Corporation. All rights reserved.<BR>
+SPDX-License-Identifier: BSD-2-Clause-Patent
+
+**/
+#include <Uefi.h>
+#include <Protocol/HiiDatabase.h>
+#include <Protocol/GraphicsOutput.h>
+#include <Protocol/HiiImageEx.h>
+#include <Protocol/PlatformLogo.h>
+#include <Protocol/HiiPackageList.h>
+#include <Library/UefiBootServicesTableLib.h>
+#include <Library/DebugLib.h>
+
+typedef struct {
+  EFI_IMAGE_ID                          ImageId;
+  EDKII_PLATFORM_LOGO_DISPLAY_ATTRIBUTE Attribute;
+  INTN                                  OffsetX;
+  INTN                                  OffsetY;
+} LOGO_ENTRY;
+
+EFI_HII_IMAGE_EX_PROTOCOL *mHiiImageEx;
+EFI_HII_HANDLE            mHiiHandle;
+LOGO_ENTRY                mLogos[] = {
+  {
+    IMAGE_TOKEN (IMG_LOGO),
+    EdkiiPlatformLogoDisplayAttributeCenter,
+    0,
+    0
+  }
+};
+
+/**
+  Load a platform logo image and return its data and attributes.
+
+  @param This              The pointer to this protocol instance.
+  @param Instance          The visible image instance is found.
+  @param Image             Points to the image.
+  @param Attribute         The display attributes of the image returned.
+  @param OffsetX           The X offset of the image regarding the Attribute.
+  @param OffsetY           The Y offset of the image regarding the Attribute.
+
+  @retval EFI_SUCCESS      The image was fetched successfully.
+  @retval EFI_NOT_FOUND    The specified image could not be found.
+**/
+EFI_STATUS
+EFIAPI
+GetImage (
+  IN     EDKII_PLATFORM_LOGO_PROTOCOL          *This,
+  IN OUT UINT32                                *Instance,
+     OUT EFI_IMAGE_INPUT                       *Image,
+     OUT EDKII_PLATFORM_LOGO_DISPLAY_ATTRIBUTE *Attribute,
+     OUT INTN                                  *OffsetX,
+     OUT INTN                                  *OffsetY
+  )
+{
+  UINT32 Current;
+  if (Instance == NULL || Image == NULL ||
+      Attribute == NULL || OffsetX == NULL || OffsetY == NULL) {
+    return EFI_INVALID_PARAMETER;
+  }
+
+  Current = *Instance;
+  if (Current >= ARRAY_SIZE (mLogos)) {
+    return EFI_NOT_FOUND;
+  }
+
+  (*Instance)++;
+  *Attribute = mLogos[Current].Attribute;
+  *OffsetX   = mLogos[Current].OffsetX;
+  *OffsetY   = mLogos[Current].OffsetY;
+  return mHiiImageEx->GetImageEx (mHiiImageEx, mHiiHandle, mLogos[Current].ImageId, Image);
+}
+
+EDKII_PLATFORM_LOGO_PROTOCOL mPlatformLogo = {
+  GetImage
+};
+
+/**
+  Entrypoint of this module.
+
+  This function is the entrypoint of this module. It installs the Edkii
+  Platform Logo protocol.
+
+  @param  ImageHandle       The firmware allocated handle for the EFI image.
+  @param  SystemTable       A pointer to the EFI System Table.
+
+  @retval EFI_SUCCESS       The entry point is executed successfully.
+
+**/
+EFI_STATUS
+EFIAPI
+InitializeLogo (
+  IN EFI_HANDLE               ImageHandle,
+  IN EFI_SYSTEM_TABLE         *SystemTable
+  )
+{
+  EFI_STATUS                  Status;
+  EFI_HII_PACKAGE_LIST_HEADER *PackageList;
+  EFI_HII_DATABASE_PROTOCOL   *HiiDatabase;
+  EFI_HANDLE                  Handle;
+
+  Status = gBS->LocateProtocol (
+                  &gEfiHiiDatabaseProtocolGuid,
+                  NULL,
+                  (VOID **) &HiiDatabase
+                  );
+  ASSERT_EFI_ERROR (Status);
+
+  Status = gBS->LocateProtocol (
+                  &gEfiHiiImageExProtocolGuid,
+                  NULL,
+                  (VOID **) &mHiiImageEx
+                  );
+  ASSERT_EFI_ERROR (Status);
+
+  //
+  // Retrieve HII package list from ImageHandle
+  //
+  Status = gBS->OpenProtocol (
+                  ImageHandle,
+                  &gEfiHiiPackageListProtocolGuid,
+                  (VOID **) &PackageList,
+                  ImageHandle,
+                  NULL,
+                  EFI_OPEN_PROTOCOL_GET_PROTOCOL
+                  );
+  if (EFI_ERROR (Status)) {
+    DEBUG ((DEBUG_ERROR, "HII Image Package with logo not found in PE/COFF resource section\n"));
+    return Status;
+  }
+
+  //
+  // Publish HII package list to HII Database.
+  //
+  Status = HiiDatabase->NewPackageList (
+                          HiiDatabase,
+                          PackageList,
+                          NULL,
+                          &mHiiHandle
+                          );
+  if (!EFI_ERROR (Status)) {
+    Handle = NULL;
+    Status = gBS->InstallMultipleProtocolInterfaces (
+                    &Handle,
+                    &gEdkiiPlatformLogoProtocolGuid, &mPlatformLogo,
+                    NULL
+                    );
+  }
+  return Status;
+}
diff --git a/TestPkg/FakeLogo/Logo.jpg b/TestPkg/FakeLogo/Logo.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..d1d099789fa794648b86c046f0320a553954764e
GIT binary patch
literal 11944
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

literal 0
HcmV?d00001

diff --git a/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.c b/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.c
new file mode 100644
index 0000000000..9e4a58049e
--- /dev/null
+++ b/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.c
@@ -0,0 +1,152 @@
+/** @file
+  I/O APIC library.
+
+  I/O APIC library assumes I/O APIC is enabled. It does not
+  handles cases where I/O APIC is disabled.
+
+  Copyright (c) 2011 - 2018, Intel Corporation. All rights reserved.<BR>
+  SPDX-License-Identifier: BSD-2-Clause-Patent
+
+**/
+
+#include <Base.h>
+
+#include <Library/IoApicLib.h>
+
+#include <Library/DebugLib.h>
+#include <Library/PcdLib.h>
+#include <Library/IoLib.h>
+#include <Library/LocalApicLib.h>
+
+#include <Register/IoApic.h>
+
+/**
+  Read a 32-bit I/O APIC register.
+
+  If Index is >= 0x100, then ASSERT().
+
+  @param  Index  Specifies the I/O APIC register to read.
+
+  @return  The 32-bit value read from the I/O APIC register specified by Index.
+**/
+UINT32
+EFIAPI
+IoApicRead (
+  IN UINTN  Index
+  )
+{
+  ASSERT (Index < 0x100);
+  MmioWrite8 (PcdGet32 (PcdIoApicBaseAddress) + IOAPIC_INDEX_OFFSET, (UINT8)Index);
+  return MmioRead32 (PcdGet32 (PcdIoApicBaseAddress) + IOAPIC_DATA_OFFSET);
+}
+
+/**
+  Write a 32-bit I/O APIC register.
+
+  If Index is >= 0x100, then ASSERT().
+
+  @param  Index  Specifies the I/O APIC register to write.
+  @param  Value  Specifies the value to write to the I/O APIC register specified by Index.
+
+  @return  The 32-bit value written to I/O APIC register specified by Index.
+**/
+UINT32
+EFIAPI
+IoApicWrite (
+  IN UINTN   Index,
+  IN UINT32  Value
+  )
+{
+  ASSERT (Index < 0x100);
+  MmioWrite8 (PcdGet32 (PcdIoApicBaseAddress) + IOAPIC_INDEX_OFFSET, (UINT8)Index);
+  return MmioWrite32 (PcdGet32 (PcdIoApicBaseAddress) + IOAPIC_DATA_OFFSET, Value);
+}
+
+/**
+  Set the interrupt mask of an I/O APIC interrupt.
+
+  If Irq is larger than the maximum number I/O APIC redirection entries, then ASSERT().
+
+  @param  Irq     Specifies the I/O APIC interrupt to enable or disable.
+  @param  Enable  If TRUE, then enable the I/O APIC interrupt specified by Irq.
+                  If FALSE, then disable the I/O APIC interrupt specified by Irq.
+**/
+VOID
+EFIAPI
+IoApicEnableInterrupt (
+  IN UINTN    Irq,
+  IN BOOLEAN  Enable
+  )
+{
+  IO_APIC_VERSION_REGISTER         Version;
+  IO_APIC_REDIRECTION_TABLE_ENTRY  Entry;
+
+  Version.Uint32 = IoApicRead (IO_APIC_VERSION_REGISTER_INDEX);
+  ASSERT (Version.Bits.MaximumRedirectionEntry < 0xF0);
+  ASSERT (Irq <= Version.Bits.MaximumRedirectionEntry);
+
+  Entry.Uint32.Low = IoApicRead (IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX + Irq * 2);
+  Entry.Bits.Mask = Enable ? 0 : 1;
+  IoApicWrite (IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX + Irq * 2, Entry.Uint32.Low);
+}
+
+/**
+  Configures an I/O APIC interrupt.
+
+  Configure an I/O APIC Redirection Table Entry to deliver an interrupt in physical
+  mode to the Local APIC of the currently executing CPU.  The default state of the
+  entry is for the interrupt to be disabled (masked).  IoApicEnableInterrupts() must
+  be used to enable(unmask) the I/O APIC Interrupt.
+
+  If Irq is larger than the maximum number I/O APIC redirection entries, then ASSERT().
+  If Vector >= 0x100, then ASSERT().
+  If DeliveryMode is not supported, then ASSERT().
+
+  @param  Irq             Specifies the I/O APIC interrupt to initialize.
+  @param  Vector          The 8-bit interrupt vector associated with the I/O APIC
+                          Interrupt.  Must be in the range 0x10..0xFE.
+  @param  DeliveryMode    A 3-bit value that specifies how the recept of the I/O APIC
+                          interrupt is handled.  The only supported values are:
+                            0: IO_APIC_DELIVERY_MODE_FIXED
+                            1: IO_APIC_DELIVERY_MODE_LOWEST_PRIORITY
+                            2: IO_APIC_DELIVERY_MODE_SMI
+                            4: IO_APIC_DELIVERY_MODE_NMI
+                            5: IO_APIC_DELIVERY_MODE_INIT
+                            7: IO_APIC_DELIVERY_MODE_EXTINT
+  @param  LevelTriggered  TRUE specifies a level triggered interrupt.
+                          FALSE specifies an edge triggered interrupt.
+  @param  AssertionLevel  TRUE specified an active high interrupt.
+                          FALSE specifies an active low interrupt.
+**/
+VOID
+EFIAPI
+IoApicConfigureInterrupt (
+  IN UINTN    Irq,
+  IN UINTN    Vector,
+  IN UINTN    DeliveryMode,
+  IN BOOLEAN  LevelTriggered,
+  IN BOOLEAN  AssertionLevel
+  )
+{
+  IO_APIC_VERSION_REGISTER         Version;
+  IO_APIC_REDIRECTION_TABLE_ENTRY  Entry;
+
+  Version.Uint32 = IoApicRead (IO_APIC_VERSION_REGISTER_INDEX);
+  ASSERT (Version.Bits.MaximumRedirectionEntry < 0xF0);
+  ASSERT (Irq <= Version.Bits.MaximumRedirectionEntry);
+  ASSERT (Vector <= 0xFF);
+  ASSERT (DeliveryMode < 8 && DeliveryMode != 6 && DeliveryMode != 3);
+
+  Entry.Uint32.Low = IoApicRead (IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX + Irq * 2);
+  Entry.Bits.Vector          = (UINT8)Vector;
+  Entry.Bits.DeliveryMode    = (UINT32)DeliveryMode;
+  Entry.Bits.DestinationMode = 0;
+  Entry.Bits.Polarity        = AssertionLevel ? 0 : 1;
+  Entry.Bits.TriggerMode     = LevelTriggered ? 1 : 0;
+  Entry.Bits.Mask            = 1;
+  IoApicWrite (IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX + Irq * 2, Entry.Uint32.Low);
+
+  Entry.Uint32.High = IoApicRead (IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX + Irq * 2 + 1);
+  Entry.Bits.DestinationID = GetApicId ();
+  IoApicWrite (IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX + Irq * 2 + 1, Entry.Uint32.High);
+}
diff --git a/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.inf b/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.inf
new file mode 100644
index 0000000000..aaf6858291
--- /dev/null
+++ b/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.inf
@@ -0,0 +1,50 @@
+## @file
+#  NvVarsFileLib
+#
+#  This library saves and restores non-volatile variables in a
+#  file within a file system.
+#
+#  Copyright (c) 2006 - 2018, Intel Corporation. All rights reserved.<BR>
+#
+#  SPDX-License-Identifier: BSD-2-Clause-Patent
+#
+#
+##
+
+[Defines]
+  INF_VERSION                    = 0x00010005
+  BASE_NAME                      = BaseFakeLibraryLib
+  MODULE_UNI_FILE                = BaseFakeLibraryLib.uni
+  FILE_GUID                      = 9172fe8b-9a36-40f8-bba5-5d48e45370ec
+  MODULE_TYPE                    = BASE
+  VERSION_STRING                 = 1.0
+  LIBRARY_CLASS                  = FakeLibraryLib
+
+#
+# The following information is for reference only and not required by the build tools.
+#
+#  VALID_ARCHITECTURES           = IA32
+#
+
+[Sources]
+  BaseFakeLibraryLib.c
+  Extra.uni
+  UniIncluded.uni
+  
+
+[Packages]
+  MdePkg/MdePkg.dec
+  UefiCpuPkg/UefiCpuPkg.dec
+  PcAtChipsetPkg/PcAtChipsetPkg.dec
+
+[LibraryClasses]
+  DebugLib
+  IoLib
+  PcdLib
+  LocalApicLib
+
+[Pcd]
+  gPcAtChipsetPkgTokenSpaceGuid.PcdIoApicBaseAddress    ## CONSUMES
+
+
+
diff --git a/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.uni b/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.uni
new file mode 100644
index 0000000000..c048e07141
--- /dev/null
+++ b/TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.uni
@@ -0,0 +1,20 @@
+// /** @file
+// Instance of CPU Library for various architecture.
+//
+// CPU Library implemented using ASM functions for IA-32, X64 and RISCV64,
+// PAL CALLs for IPF, and empty functions for EBC.
+//
+// Copyright (c) 2007 - 2014, Intel Corporation. All rights reserved.<BR>
+// Portions copyright (c) 2008 - 2009, Apple Inc. All rights reserved.<BR>
+// Portions copyright (c) 2011 - 2013, ARM Ltd. All rights reserved.<BR>
+// Copyright (c) 2020, Hewlett Packard Enterprise Development LP. All rights reserved.<BR>
+//
+// SPDX-License-Identifier: BSD-2-Clause-Patent
+//
+// **/
+
+
+#string STR_MODULE_ABSTRACT             #language en-US "Fake Library Instance for Incremental Build Test(for I/O APIC library class)."
+
+#string STR_MODULE_DESCRIPTION          #language en-US "Fake Library Instance try to test the influence which brought by all types of source code files' changing (Copy from PcAtChipsetPkg\Library\BaseIoApicLib)."
+
diff --git a/TestPkg/Library/BaseFakeLibraryLib/Extra.uni b/TestPkg/Library/BaseFakeLibraryLib/Extra.uni
new file mode 100644
index 0000000000..0620b9afcd
--- /dev/null
+++ b/TestPkg/Library/BaseFakeLibraryLib/Extra.uni
@@ -0,0 +1,27 @@
+// /** @file
+// Instance of CPU Library for various architecture.
+//
+// CPU Library implemented using ASM functions for IA-32, X64 and RISCV64,
+// PAL CALLs for IPF, and empty functions for EBC.
+//
+// Copyright (c) 2007 - 2014, Intel Corporation. All rights reserved.<BR>
+// Portions copyright (c) 2008 - 2009, Apple Inc. All rights reserved.<BR>
+// Portions copyright (c) 2011 - 2013, ARM Ltd. All rights reserved.<BR>
+// Copyright (c) 2020, Hewlett Packard Enterprise Development LP. All rights reserved.<BR>
+//
+// SPDX-License-Identifier: BSD-2-Clause-Patent
+//
+// **/
+
+#include "UniIncluded.uni"
+#langdef en-US  "English"
+
+
+#string STR_EXTRA_ABSTRACT             
+#language en-US 
+"This is the Extra ABSTRACT of the Module"
+
+#string STR_EXTRA_DESCRIPTION          
+#language en-US 
+"This is the Extra DESCRIPTION of the Module"
+
diff --git a/TestPkg/Library/BaseFakeLibraryLib/UniIncluded.uni b/TestPkg/Library/BaseFakeLibraryLib/UniIncluded.uni
new file mode 100644
index 0000000000..5796a7f25c
--- /dev/null
+++ b/TestPkg/Library/BaseFakeLibraryLib/UniIncluded.uni
@@ -0,0 +1,21 @@
+// /** @file
+// Instance of CPU Library for various architecture.
+//
+// CPU Library implemented using ASM functions for IA-32, X64 and RISCV64,
+// PAL CALLs for IPF, and empty functions for EBC.
+//
+// Copyright (c) 2007 - 2014, Intel Corporation. All rights reserved.<BR>
+// Portions copyright (c) 2008 - 2009, Apple Inc. All rights reserved.<BR>
+// Portions copyright (c) 2011 - 2013, ARM Ltd. All rights reserved.<BR>
+// Copyright (c) 2020, Hewlett Packard Enterprise Development LP. All rights reserved.<BR>
+//
+// SPDX-License-Identifier: BSD-2-Clause-Patent
+//
+// **/
+
+#langdef en-US  "English"
+
+#string EXTRAINC_ABSTRACT             #language en-US "This is the UNI included in the Extra ABSTRACT of the Module"
+
+#string EXTRAINC_DESCRIPTION          #language en-US "This is the UNI included in the Extra DESCRIPTION of the Module"
+
diff --git a/TestPkg/LibraryClass.dsc b/TestPkg/LibraryClass.dsc
index 1a6e61dbf1..6c471401bc 100644
--- a/TestPkg/LibraryClass.dsc
+++ b/TestPkg/LibraryClass.dsc
@@ -40,14 +40,15 @@ NvVarsFileLib|TestPkg/Library/NvVarsFileLib/NvVarsFileLib.inf
   FileExplorerLib|MdeModulePkg/Library/FileExplorerLib/FileExplorerLib.inf
   DxeServicesTableLib|MdePkg/Library/DxeServicesTableLib/DxeServicesTableLib.inf
   SortLib|MdeModulePkg/Library/UefiSortLib/UefiSortLib.inf
   CpuLib|MdePkg/Library/BaseCpuLib/BaseCpuLib.inf
   MtrrLib|UefiCpuPkg/Library/MtrrLib/MtrrLib.inf
-
+  FakeLibraryLib|TestPkg/Library/BaseFakeLibraryLib/BaseFakeLibraryLib.inf
 
 [LibraryClasses.common.SEC]
   TimerLib|TestPkg/Library/AcpiTimerLib/BaseRomAcpiTimerLib.inf
+  PpiListLib|EmulatorPkg/Library/SecPpiListLib/SecPpiListLib.inf
   
 !ifdef $(DEBUG_ON_SERIAL_PORT)
   DebugLib|MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort.inf
 !else
   DebugLib|TestPkg/Library/PlatformDebugLibIoPort/PlatformRomDebugLibIoPort.inf
diff --git a/TestPkg/Sec/SecMain.inf b/TestPkg/Sec/SecMain.inf
index 7c30059029..b93cc8813a 100644
--- a/TestPkg/Sec/SecMain.inf
+++ b/TestPkg/Sec/SecMain.inf
@@ -48,10 +48,11 @@
   PeCoffLib
   PeCoffGetEntryPointLib
   PeCoffExtraActionLib
   ExtractGuidedSectionLib
   LocalApicLib
+  FakeLibraryLib
 
 [Ppis]
   gEfiTemporaryRamSupportPpiGuid                # PPI ALWAYS_PRODUCED
 
 [Pcd]
diff --git a/TestPkg/TestIa32X64.fdf b/TestPkg/TestIa32X64.fdf
index 22ea0687e1..42d028a2d9 100644
--- a/TestPkg/TestIa32X64.fdf
+++ b/TestPkg/TestIa32X64.fdf
@@ -114,10 +114,11 @@ READ_LOCK_STATUS   = TRUE
 #
 # The code in this FV handles the initial firmware startup, and
 # decompresses the PEI and DXE FVs which handles the rest of the boot sequence.
 #
 INF  TestPkg/Sec/SecMain.inf
+INF  TestPkg\FakeEmuSec\Sec.inf
 
 INF  RuleOverride=RESET_VECTOR TestPkg/ResetVector/ResetVector.inf
 
 ################################################################################
 [FV.PEIFV]
@@ -189,10 +190,11 @@ INF  RuleOverride=ACPITABLE TestPkg/AcpiTables/AcpiTables.inf
 INF  UefiCpuPkg\CpuDxe\CpuDxe.inf
 #INF  MdeModulePkg/Universal/ReportStatusCodeRouter/RuntimeDxe/ReportStatusCodeRouterRuntimeDxe.inf
 #INF  MdeModulePkg/Universal/StatusCodeHandler/RuntimeDxe/StatusCodeHandlerRuntimeDxe.inf
 
 INF  MdeModulePkg/Logo/LogoDxe.inf
+INF  TestPkg\FakeLogo\JpegLogoDxe.inf
 
 
 ################################################################################
 
 [FV.FVMAIN_COMPACT]
diff --git a/TestPkg/TestPkg32X64.dsc b/TestPkg/TestPkg32X64.dsc
index c3ef022010..496b0d436f 100644
--- a/TestPkg/TestPkg32X64.dsc
+++ b/TestPkg/TestPkg32X64.dsc
@@ -111,10 +111,11 @@
   TestPkg/ResetVector/ResetVector.inf
 
   #
   # SEC Phase modules
   #
+  TestPkg\FakeEmuSec\Sec.inf
   TestPkg/Sec/SecMain.inf {
     <LibraryClasses>
     NULL|MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib.inf
   }
 
@@ -149,10 +150,11 @@
   }
 
   MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
 
   MdeModulePkg/Logo/LogoDxe.inf
+  TestPkg\FakeLogo\JpegLogoDxe.inf
   MdeModulePkg/Application/UiApp/UiApp.inf {
     <LibraryClasses>
       NULL|MdeModulePkg/Library/DeviceManagerUiLib/DeviceManagerUiLib.inf
       NULL|MdeModulePkg/Library/BootManagerUiLib/BootManagerUiLib.inf
       NULL|MdeModulePkg/Library/BootMaintenanceManagerUiLib/BootMaintenanceManagerUiLib.inf
-- 
2.29.1.windows.1

